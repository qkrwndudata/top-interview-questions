# -*- coding: utf-8 -*-
"""Binary Tree Inorder Traversal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cfQQA7P8nWwLgQmGOf-vJbmh_dwLMvK7
"""

class Solution:
    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        answer = []
        if root:
            if root.left:
                answer += self.inorderTraversal(root.left)
            answer.append(root.val)
            if root.right:
                answer += self.inorderTraversal(root.right)
            return answer
        else:
            return answer

def inorderTraversal(self, root):
    stack = [root]
    res = []
    while stack:
        node = stack.pop()
        if node:
            stack.append(node.right)
            stack.append(node)
            stack.append(node.left)
        else:
            if stack:
                node = stack.pop()
                res.append(node.val)
    return res