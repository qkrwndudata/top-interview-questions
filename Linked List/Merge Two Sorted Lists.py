# -*- coding: utf-8 -*-
"""leetcode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19sP258Wi-6r79zMk0lHUi2-EIX-amQ_I
"""

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1 is None:
            return list2
        if list2 is None:
            return list1

        dummy = ListNode()
        answer = dummy

        while list1 and list2:
            if list1.val <= list2.val:
                answer.next = list1
                list1 = list1.next
            else:
                answer.next = list2
                list2 = list2.next
            answer = answer.next

            if list1 is None:
                answer.next = list2
            if list2 is None:
                answer.next = list1
        return dummy.next
    
    # 유경 알고리즘 직접 작성해보고 코드로 구현하기
